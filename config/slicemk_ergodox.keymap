#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                layer_0 {
                        bindings = <
    &bootloader
    &kp EQUAL   &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4  &kp NUM_5  &kp LARW   &RARW      &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0  &kp DASH
    &kp DEL    &kp Q      &kp W      &kp E      &kp R      &kp T      &kp CLCK   &kp M_MUTE &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BACKSLASH
    &kp BKSP    &kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L      &kp SCLN   &kp APOSTROPHE
    &mo LSFT      &kp Z      &kp X      &kp C      &kp V      &kp B      &kp HYPER &kp CTRLSHFT &kp N      &kp M      &kp CMMA   &kp DOT    &kp FSLH   &kp TAB
    &none      &LCTL      &kp LALT   &kp LARW   &kp RARW                                               &kp UARW   &kp DARW   &kp LEFT_BRACKET   &kp RIGHT_BRACKET       &to 1
                                                           &kp DEL    &kp HOME   &kp END    &kp INS
                                                                      &kp CAPSLOCK   &kp DEL
                                                &kp SPC    &kp BKSP                         &kp RSFT   &kp RET
                                                                      &kp LGUI   &mo 1
                        >;
                };

                layer_1 {
                        bindings = <
    &bootloader
    &kp ESC      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &none      &none      &kp F6      &kp F7      &kp F8      &kp F9     &kp F10       &kp F11
    &none      &kp EXCLAMATION     &kp AT_SIGN     &kp LEFT_BRACE     &kp RIGHT_BRACKET     &kp PIPE      &none      &none      &kp UARW      &kp NUM_7      &kp NUM_8      &kp NUM_9      &kp ASTERISK      &kp F12
    &none      &kp HASH     &kp DOLLAR     &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS     &kp GRAVE                            &kp DARW      &kp NUM_4      &kp NUM_5      &NUM_6      &kp PLUS      &kp MINUS
    &none      &kp PERCENT     &kp CARET    &kp LEFT_BRACKET    &kp RIGHT_BRACKET    &kp TILDE      &none      &none      &none      &kp NUM_1      &kp NUM_2      &kp  NUM_3     &kp BSLH      &none
    &none      &kp EQUAL      &none      &none      &none                                                  &none      &kp DOT      &kp NUM_0      &kp EQUAL      &to 0
                                                           &none      &none      &none      &none
                                                                      &none      &none
                                                &none      &none                            &none      &none
                                                                      &none      &none
                        >;
                };

                layer_2 {
                        bindings = <
    &bootloader
    &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &bt BT_SEL 0
    &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &bt BT_SEL 1
    &none      &none      &none      &none      &none      &none                            &none      &none      &none      &none      &none      &bt BT_SEL 2
    &none      &none      &none      &kp LBKT   &kp RBKT   &none      &none      &none      &none      &none      &none      &none      &none      &bt BT_SEL 3
    &none      &none      &none      &none      &none                                                  &none      &none      &none      &none      &bt BT_SEL 4
                                                           &none      &none      &none      &none
                                                                      &none      &none
                                                &none      &none                            &none      &none
                                                                      &none      &none
                        >;
                };

        };
};
